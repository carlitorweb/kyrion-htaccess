server {
	######################################################################
	## The Master NginX Configuration
	##
	## PLEASE READ THE README.md FILE BEFORE TRYING TO USE THIS ON YOUR SITE.
	###############################################################################

	######################################################################
	## Basic server setup. Change to match YOUR system!
	######################################################################
	# -- Basic configuration
	# ---- Port to listen to. For SSL sites change this to 443.
	listen 80;
	# ---- Domain name(s) of this site, separated by commas
	server_name www.example.com example.com www.example.org example.org;
	# ---- Site root path
	root /home/web/domains/www.example.com/public_html;
	# ---- Path to the access log
	access_log /home/web/domains/www.example.com/logs/access.log;
	# ---- Path to the error log
	error_log /home/web/domains/www.example.com/logs/error.log;
	# ---- Custom error pages. Each error page is four lines. The first one
	#      defines which page will be shown for each error code. The next
	#      three lines make sure that the error page cannot be accessed
	#      directly over the web.
	error_page 404 /errors/404.html;
	location  /errors/404.html {
		internal;
	}
	
	error_page 500 /errors/500.html;
	location  /errors/500.html {
		internal;
	}
	
	error_page 403 /errors/403.html;
	location  /errors/403.html {
		internal;
	}
	
	######################################################################
	## SSL Configuration
	##
	## Only use this block if you are setting up the SSL (HTTPS) server
	## definition of your site.
	######################################################################
	ssl on;
	ssl_certificate /etc/ssl/localcerts/webserver.pem;
	ssl_certificate_key /etc/ssl/localcerts/webserver.key;
	
	ssl_session_timeout 5m;
	
	ssl_protocols SSLv3 TLSv1;
	ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
	ssl_prefer_server_ciphers on;
	
	######################################################################
	## The Kitchen Sink - An array of useful and performance-tuning options
	######################################################################
	# -- Timeout handling, see http://wiki.nginx.org/HttpCoreModule
	client_header_timeout 10;
	client_body_timeout   10;
	send_timeout          30;
	keepalive_timeout     40 20;
	
	# -- Socket settings, see http://wiki.nginx.org/HttpCoreModule
	connection_pool_size        8192;
	client_header_buffer_size   4k;
	large_client_header_buffers 8 8k;
	request_pool_size           8k;
	
	# -- Performance, see http://wiki.nginx.org/HttpCoreModule
	sendfile on;
	sendfile_max_chunk 1m;
	postpone_output 0;
	tcp_nopush on;
	tcp_nodelay off;
	
	# -- Output buffering, see http://wiki.nginx.org/HttpCoreModule
	output_buffers 8 32k;
	
	# -- Character encoding, see http://wiki.nginx.org/HttpCharsetModule
	charset                 utf-8;
	source_charset          utf-8;

	# -- Security options, see http://wiki.nginx.org/HttpCoreModule
	server_name_in_redirect off;
	server_tokens off;
	ignore_invalid_headers on;
	# You may have to comment out the next line on multi-site installations
	disable_symlinks if_not_owner;

	# -- Maximum client body size set to 1 Gigabyte
	client_max_body_size 1G;

	######################################################################
	## Redirect non-www to www
	##
	## If you enable this, disable the "Redirect www to non-www" below!
	######################################################################
	if ($host = 'example.com' ) {
		rewrite ^/(.*)$ http://www.example.com/$1 permanent;
	}

	######################################################################
	## Redirect www to non-www
	##
	## If you enable this, disable the "Redirect non-www to www" above!
	######################################################################
	#if ($host = 'www.example.com' ) {
	#	rewrite ^/(.*)$ http://example.com/$1 permanent;
	#}

	######################################################################
	## Redirect example.org to example.com
	##
	## Your server_name must include both the old and new domain names!
	######################################################################
	if ($host ~ "(www\.)?example.org$" ) {
		rewrite ^/(.*)$ http://www.example.com/$1 permanent;
	}
	
	######################################################################
	## CloudFlare support - see http://wiki.nginx.org/NginxHttpRealIpModule
	## Comment out if you are not using the CloudFlare CDN
	######################################################################
	set_real_ip_from 204.93.240.0/24;
	set_real_ip_from 204.93.177.0/24;
	set_real_ip_from 199.27.128.0/21;
	set_real_ip_from 173.245.48.0/20;
	set_real_ip_from 103.22.200.0/22;
	set_real_ip_from 141.101.64.0/18;
	set_real_ip_from 108.162.192.0/18;
	set_real_ip_from 190.93.240.0/20;
	real_ip_header CF-Connecting-IP;

	## HSTS Header - See http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security
	# add_header Strict-Transport-Security max-age=31536000;

	## Referrer-policy
	add_header Referrer-Policy "no-referrer-when-downgrade";

	######################################################################
	## Directory indices
	## Forces index.php to be read before the index.htm(l) files
	######################################################################
	index index.php index.html index.htm;
	
	######################################################################
	## Status page - DISABLE THIS ON LIVE SITES!
	######################################################################
	location /nginx_status {
		stub_status on;
		access_log   off;
		# Remember to change this to your PC's IP address
		allow 192.168.0.1;
	}

	######################################################################
	## Google Apps redirection
	## This also shows how to redirect a directory to an external server
	######################################################################
	location ~* /mail {
		rewrite ^ http://mail.google.com/a/example.com permanent;
	}
	
	######################################################################
	## Block some common exploits
	######################################################################
	set $common_exploit 0;
	if ($query_string ~ "proc/self/environ") {
		set $common_exploit 1;
	}
	if ($query_string ~ "mosConfig_[a-zA-Z_]{1,21}(=|\%3D)") {
		set $common_exploit 1;
	}
	if ($query_string ~ "base64_(en|de)code\(.*\)") {
		set $common_exploit 1;
	}
	if ($query_string ~ "(<|%3C).*script.*(>|%3E)") {
		set $common_exploit 1;
	}
	if ($query_string ~ "GLOBALS(=|\[|\%[0-9A-Z]{0,2})") {
		set $common_exploit 1;
	}
	if ($query_string ~ "_REQUEST(=|\[|\%[0-9A-Z]{0,2})") {
		set $common_exploit 1;
	}
	if ($common_exploit = 1) {
		return 403;
	}

	######################################################################
	## Protect against common file injection attacks
	######################################################################
	set $file_injection 0;
	if ($query_string ~ "[a-zA-Z0-9_]=http://") {
		set $file_injection 1;
	}
	if ($query_string ~ "[a-zA-Z0-9_]=(\.\.//?)+") {
		set $file_injection 1;
	}
	if ($query_string ~ "[a-zA-Z0-9_]=/([a-z0-9_.]//?)+") {
		set $file_injection 1;
	}
	if ($file_injection = 1) {
		return 403;
		break;
	}
	
	## Enable SEF URLs
	# Joomla API application
	location /api/ {
		try_files $uri $uri/ /api/index.php?$args;
	}
	# Joomla public frontend application
	location / {
		try_files $uri $uri/ /index.php?$args;
	}
	# Parse index.php as a PHP executable file
	location ~* /index.php$ {
		fastcgi_pass   $fastcgi_pass;
		break;
	}

	######################################################################
	## Advanced server protection rules exceptions
	##
	## You will DEFINITELY need to add exceptions for a lot of extensions
	## to work. Yeah, I have to write an illustrated guide at some point.
	## However, if you can use Firebug or Google Chrome Web Developer
	## window then you can find out the exceptions all by yourself. Use the
	## following as a guide.
	######################################################################
	# Allow direct access to a specific PHP file
	location = /tmp/test.php {
		fastcgi_pass $fastcgi_pass;
		break;
	}	
	
	# Allow direct access to a specific static (non-PHP) file
	location = /administrator/test.png {
		break;
	}

	# Recommended exceptions
	location = /administrator/components/com_akeeba/restore.php {
		fastcgi_pass   $fastcgi_pass;
		break;
	}
	location = /administrator/components/com_admintools/restore.php {
		fastcgi_pass   $fastcgi_pass;
		break;
	}
	location = /administrator/components/com_joomlaupdate/restore.php {
		fastcgi_pass   $fastcgi_pass;
		break;
	}
	location ~* ^/\.well\-known/.*\.php$
	{
		break;
	}
	location ~* ^/\.well\-known/.*$
	{
		break;
	}
	# This needs customisation!
	location ~* ^/templates\/your_template_name_here/.*$
	{
		break;
	}
	
	######################################################################
	## Disable PHP Easter Eggs
	######################################################################
	if ($query_string ~ "\=PHP[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}") {
		return 403;
		break;
	}

	######################################################################
	## Block access to configuration.php-dist and htaccess.txt
	######################################################################
	location = /configuration.php-dist {
		log_not_found off;
		access_log off;
		return 404;
		break;
	}

	location = /htaccess.txt {
		log_not_found off;
		access_log off;
		return 404;
		break;
	}

	location = /web.config {
		log_not_found off;
		access_log off;
		return 404;
		break;
	}

	location = /configuration.php {
		log_not_found off;
		access_log off;
		return 404;
		break;
	}

	location = /CONTRIBUTING.md {
		log_not_found off;
		access_log off;
		return 404;
		break;
	}

	location = /joomla.xml {
		log_not_found off;
		access_log off;
		return 404;
		break;
	}

	location = /LICENSE.txt {
		log_not_found off;
		access_log off;
		return 404;
		break;
	}

	location = /phpunit.xml {
		log_not_found off;
		access_log off;
		return 404;
		break;
	}

	location = /README.txt {
		log_not_found off;
		access_log off;
		return 404;
		break;
	}

	location = /web.config.txt {
		log_not_found off;
		access_log off;
		return 404;
		break;
	}

	######################################################################
	## Advanced server protection
	######################################################################
	# Allow media files in select back-end directories
	location ~* ^/administrator/(components|modules|templates|images|plugins)/.*.(jpe|jpg|jpeg|jp2|jpe2|png|gif|bmp|css|js|swf|html|mpg|mp3|mpeg|mp4|avi|wav|ogg|ogv|xls|xlsx|doc|docx|ppt|pptx|zip|rar|pdf|xps|txt|7z|svg|odt|ods|odp|flv|mov|htm|ttf|woff|woff2|eot|webp|JPG|JPEG|PNG|GIF|CSS|JS|TTF|WOFF|WOFF2|EOT|WEBP)$ {
		break;
	}

	# Allow access to the back-end index.php file
	location = /administrator/index.php {
		fastcgi_pass   $fastcgi_pass;
		break;
	}
	location ~* ^/administrator$ {
		return 301 /administrator/index.php?$args;
	}
	location ~* ^/administrator/$ {
		return 301 /administrator/index.php?$args;
	}

	# Disable access to everything else.
	location ~* /administrator.*$ {
		# If it is a file, directory or symlink and I haven't deliberately
		# enabled access to it, forbid any access to it!
		if (-e $request_filename) {
			return 403;
		}
		# In any other case, just treat as a SEF URL
		try_files $uri $uri/ /administrator/index.php?$args;
	}

	# Allow media files in select front-end directories
	location ~* ^/(components|modules|templates|images|plugins|media|libraries|media/jui/fonts)/.*.(jpe|jpg|jpeg|jp2|jpe2|png|gif|bmp|css|js|swf|html|mpg|mp3|mpeg|mp4|avi|wav|ogg|ogv|xls|xlsx|doc|docx|ppt|pptx|zip|rar|pdf|xps|txt|7z|svg|odt|ods|odp|flv|mov|ico|htm|ttf|woff|woff2|eot|webp|JPG|JPEG|PNG|GIF|CSS|JS|TTF|WOFF|WOFF2|EOT|WEBP)$ {
		break;
	}

	## Disallow front-end access for certain Joomla! system directories (unless access to their files is allowed above)
	location ~* ^/includes/js/ {
		return 403;
	}
	location ~* ^/(cache|includes|language|logs|log|tmp)/ {
		return 403;
	}
	# Allow access to /
	location ~* ^/$ {
		return 301 /index.php?$args;
	}

	# Disable access to everything else.
	location ~* ^/.*$ {
		# If it is a file, directory or symlink and I haven't deliberately
		# enabled access to it, forbid any access to it!
		if (-e $request_filename) {
			return 403;
		}
		# In any other case, just treat as a SEF URL
		try_files $uri $uri/ /index.php?$args;
	}
	##### Advanced server protection -- END
	
	######################################################################
	## PHP Setup
	######################################################################
	include fastcgi_params;
	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	set $fastcgi_pass "unix:/var/run/php5-fpm-web.sock";
	location ~ index.php$ {
		fastcgi_pass $fastcgi_pass;
	}

	######################################################################
	## Expiration control
	##
	## Optimises the expiration time
	######################################################################
	# CSS and JavaScript : 1 week
	location ~* \.(css|js)$ {
			access_log off; log_not_found off;
			expires 1w;
	}

	# Image files : 1 month
	location ~* \.(bmp|gif|jpg|jpeg|jp2|png|svg|tif|tiff|ico|wbmp|wbxml|smil|webp)$ {
			access_log off; log_not_found off;
			expires 1M;
	}

	# Font files : 1 week
	location ~* \.(woff|woff2|ttf|otf|eot)$ {
			access_log off; log_not_found off;
			expires 1M;
	}

	# Document files : 1 month
	location ~* \.(pdf|txt|xml)$ {
			access_log off; log_not_found off;
			expires 1M;
	}

	# Audio files : 1 month
	location ~* \.(mid|midi|mp3|m4a|m4r|aif|aiff|ra|wav|voc|ogg)$ {
			access_log off; log_not_found off;
			expires 1M;
	}

	# Video files : 1 month
	location ~* \.(swf|vrml|avi|mkv|mpg|mpeg|mp4|m4v|mov|asf)$ {
			access_log off; log_not_found off;
			expires 1M;
	}
	
	######################################################################
	## User agent blocking
	##
	## Disables access to your site by user agent. Useful to block some
	## bandwidth hoggers.
	######################################################################
	set $bad_ua 0;

	if ($http_user_agent ~ "WebBandit") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "webbandit") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Acunetix") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "binlar") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "BlackWidow") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Bolt 0") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Bot mailto:craftbot@yahoo.com") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "BOT for JCE") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "casper") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "checkprivacy") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "ChinaClaw") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "clshttp") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "cmsworldmap") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "comodo") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Custo") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Default Browser 0") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "diavol") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "DIIbot") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "DISCo") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "dotbot") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Download Demon") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "eCatch") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "EirGrabber") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "EmailCollector") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "EmailSiphon") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "EmailWolf") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Express WebPictures") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "extract") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "ExtractorPro") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "EyeNetIE") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "feedfinder") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "FHscan") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "FlashGet") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "flicky") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "GetRight") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "GetWeb!") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Go-Ahead-Got-It") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Go!Zilla") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "grab") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "GrabNet") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Grafula") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "harvest") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "HMView") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "ia_archiver") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Image Stripper") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Image Sucker") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "InterGET") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Internet Ninja") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "InternetSeer.com") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "jakarta") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Java") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "JetCar") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "JOC Web Spider") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "kmccrew") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "larbin") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "LeechFTP") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "libwww") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Mass Downloader") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Maxthon$") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "microsoft.url") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "MIDown tool") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "miner") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Mister PiX") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "NEWT") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "MSFrontPage") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Navroad") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "NearSite") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Net Vampire") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "NetAnts") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "NetSpider") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "NetZIP") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "nutch") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Octopus") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Offline Explorer") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Offline Navigator") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "PageGrabber") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Papa Foto") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "pavuk") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "pcBrowser") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "PeoplePal") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "planetwork") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "psbot") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "purebot") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "RealDownload") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "ReGet") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Rippers 0") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "SeaMonkey$") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "sitecheck.internetseer.com") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "SiteSnagger") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "skygrid") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "SmartDownload") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "sucker") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "SuperBot") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "SuperHTTP") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Surfbot") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "tAkeOut") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Teleport Pro") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Toata dragostea mea pentru diavola") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "turnit") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "vikspider") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "VoidEYE") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Web Image Collector") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Web Sucker") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "WebAuto") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "WebCopier") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "WebFetch") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "WebGo IS") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "WebLeacher") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "WebReaper") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "WebSauger") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Website eXtractor") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Website Quester") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "WebStripper") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "WebWhacker") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "WebZIP") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Widow") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "WWW-Mechanize") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "WWWOFFLE") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Xaldon WebSpider") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Yandex") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Zeus") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "zmeu") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "CazoodleBot") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "discobot") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "ecxi") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "GT::WWW") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "heritrix") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "HTTP::Lite") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "HTTrack") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "ia_archiver") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "id-search") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "id-search.org") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "IDBot") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Indy Library") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "IRLbot") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "ISC Systems iRc Search 2.1") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "LinksManager.com_bot") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "linkwalker") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "lwp-trivial") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "MFC_Tear_Sample") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Microsoft URL Control") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Missigua Locator") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "panscient.com") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "PECL::HTTP") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "PHPCrawl") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "PleaseCrawl") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "SBIder") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Snoopy") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Steeler") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "URI::Fetch") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "urllib") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Web Sucker") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "webalta") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "WebCollage") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Wells Search II") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "WEP Search") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "zermelo") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "ZyBorg") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Indy Library") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "libwww-perl") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "Go!Zilla") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "TurnitinBot") {
		set $bad_ua 1;
	}
	if ($http_user_agent ~ "sqlmap") {
		set $bad_ua 1;
	}
	if ($bad_ua = 1) {
		return 403;
	}
	
	# If you enable any of the above don't remove this. It's what blocks
	# the bad user agents!
	if ($bad_ua = 1) { 
		return 403; 
	}

	######################################################################
	## Automatic compression of static resources
	## Compress text, html, javascript, css, xml and other static resources
	## May kill access to your site for old versions of Internet Explorer
	######################################################################
	# The following is the actual automatic compression setup
	gzip            on;
	gzip_vary		on;
	gzip_comp_level 6;
	gzip_proxied	expired no-cache no-store private auth;
	gzip_min_length 1000;
	gzip_http_version 1.1;
	gzip_types      text/plain text/css application/xhtml+xml application/xml+rss application/rss+xml application/x-javascript application/javascript text/javascript application/json text/xml application/xml image/svg+xml;
	gzip_buffers    16 8k;
	gzip_disable "MSIE [1-6]\.(?!.*SV1)";

}
